#-----------------------------------------------------------
# Vivado v2020.1 (64-bit)
# SW Build 2902540 on Wed May 27 19:54:49 MDT 2020
# IP Build 2902112 on Wed May 27 22:43:36 MDT 2020
# Start of session at: Thu Jul 16 12:35:42 2020
# Process ID: 20668
# Current directory: C:/Users/eibraim/AppData/Roaming/Xilinx/Vivado
# Command line: vivado.exe -gui_launcher_event rodinguilauncherevent13900
# Log file: C:/Users/eibraim/AppData/Roaming/Xilinx/Vivado/vivado.log
# Journal file: C:/Users/eibraim/AppData/Roaming/Xilinx/Vivado\vivado.jou
#-----------------------------------------------------------
start_gui
set argv "-r C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/HDMI"
-r C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/HDMI
source ./digilent-vivado-scripts/digilent_vivado_checkin.tcl
couldn't read file "./digilent-vivado-scripts/digilent_vivado_checkin.tcl": no such file or directory
cd C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/HDMI
couldn't change working directory to "C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/HDMI": no such file or directory
cd C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/HDMI
couldn't change working directory to "C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/HDMI": no such file or directory
C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA
invalid command name "C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA"
set argv "-r C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA"
-r C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA
ls
WARNING: [Common 17-259] Unknown Tcl command 'ls' sending command to the OS shell for execution. It is recommended to use 'exec' to send the command to the OS shell.
2020.1
reportstrategies
strategies
tclapp
vivado.jou
vivado.log
vivado_1216.backup.jou
vivado_1216.backup.log
vivado_12364.backup.jou
vivado_12364.backup.log
vivado_20068.backup.jou
vivado_20068.backup.log
vivado_21284.backup.jou
vivado_21284.backup.log
vivado_764.backup.jou
vivado_764.backup.log
vivado_pid20668.str
cd C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/digilent-vivado-scripts/
ls
WARNING: [Common 17-259] Unknown Tcl command 'ls' sending command to the OS shell for execution. It is recommended to use 'exec' to send the command to the OS shell.
config.ini
digilent_vivado_checkin.tcl
digilent_vivado_checkout.tcl
git_vivado.py
License.txt
README.md
template_master.gitignore
template_README.md
source digilent_vivado_checkin.tcl
# foreach arg $argv {
#     puts $arg
# }
-r
C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA
# set idx [lsearch ${argv} "-r"]
# if {${idx} != -1} {
#     set repo_path [glob -nocomplain [file normalize [lindex ${argv} [expr {${idx}+1}]]]]
# } else {
#     # Default
#     set repo_path [file normalize [file join [file dirname [info script]] ..]]
# }
# set idx [lsearch ${argv} "-x"]
# if {${idx} != -1} {
#     set xpr_path [glob -nocomplain [file normalize [lindex ${argv} [expr {${idx}+1}]]]]
# } else {
#     # Default
#     set xpr_path [glob -nocomplain "${repo_path}/proj/*.xpr"]
# }
# if {[llength ${xpr_path}] != 1} {
#     puts "ERROR: XPR not found"
# } else {
#     set xpr_path [lindex ${xpr_path} 0]
# }
# set idx [lsearch ${argv} "-v"]
# if {${idx} != -1} {
#     set vivado_version [lindex ${argv}]
# } else {
#     set vivado_version [version -short]
# }
# set vivado_version [lindex $argv 2];
# set force_overwrite_info_script 0;
# set proj_file [file tail $xpr_path]
# set proj_dir [file dirname $xpr_path]
# set proj_name [file rootname [file tail $proj_file]]
# puts "INFO: Checking project \"$proj_file\" into version control."
INFO: Checking project "Arty-A7-100-Pmod-VGA.xpr" into version control.
WARNING: [Coretcl 2-89] No projects matched '*'
# set already_opened [get_projects -filter "DIRECTORY==$proj_dir && NAME==$proj_name"]
# if {[llength $already_opened] == 0} {
#     open_project $xpr_path
# } else {
#     current_project [lindex $already_opened 0]
# }
INFO: [Project 1-313] Project file moved from 'C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/2018 release/vivado_proj' since last save.
Scanning sources...
Finished scanning sources
WARNING: [filemgmt 56-3] IP Repository Path: Could not find the directory 'C:/Users/eibraim/Desktop/RepoUpdates/repo'.
INFO: [IP_Flow 19-234] Refreshing IP repositories
WARNING: [IP_Flow 19-2248] Failed to load user IP repository 'c:/Users/eibraim/Desktop/RepoUpdates/repo'; Can't find the specified path.
If this directory should no longer be in your list of user repositories, go to the IP Settings dialog and remove it.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2020.1/data/ip'.
open_project: Time (s): cpu = 00:00:20 ; elapsed = 00:00:10 . Memory (MB): peak = 1079.578 ; gain = 0.000
# set required_dirs [list 				\
#     $repo_path/proj						\
#     $repo_path/hw_handoff			    \
#     $repo_path/src 						\
#     $repo_path/src/bd 					\
#     $repo_path/src/constraints 			\
#     $repo_path/src/ip 					\
#     $repo_path/src/hdl 					\
#     $repo_path/src/other 				\
#     $repo_path/repo 					\
#     $repo_path/repo/local 				\
# ]
# set required_files [list 				\
#     $repo_path/proj/.keep				\
#     $repo_path/hw_handoff/.keep			\
#     $repo_path/src/bd/.keep				\
#     $repo_path/src/constraints/.keep	\
#     $repo_path/src/ip/.keep				\
#     $repo_path/src/hdl/.keep			\
#     $repo_path/src/other/.keep			\
#     $repo_path/repo/local/.keep			\
# ]
# set files [list]
# foreach d $required_dirs {
#     if {[file exists $d] == 0} {
#         file mkdir $d
#     }
# }
# foreach f $required_files {
#     if {[file exists $f] == 0} {
#         close [open $f "w"]
#     }
# }
WARNING: [Vivado 12-818] No files matched '*'
# set bd_files [get_files -of_objects [get_filesets sources_1] -filter "NAME=~*.bd"]
# if {[llength $bd_files] > 1} {
#     puts "ERROR: This script cannot handle projects containing more than one block design!"
# } elseif {[llength $bd_files] == 1} {
#     set bd_file [lindex $bd_files 0]
#     open_bd_design $bd_file
#     set bd_name [file tail [file rootname [get_property NAME $bd_file]]]
#     set script_name "$repo_path/src/bd/${bd_name}.tcl"
#     puts "INFO: Checking in ${script_name} to version control."
#     write_bd_tcl -force -make_local $script_name
#     # TODO: Add support for "Add Module" IPI features (check in hdl files included in sources_1, but not any ip fileset)
# } else {
#     foreach source_file [get_files -of_objects [get_filesets sources_1]] {
#         set origin [get_property name $source_file]
#         set skip 0
#         if {[file extension $origin] == ".vhd"} {
#             set subdir hdl
#         } elseif {[file extension $origin] == ".v"} {
#             set subdir hdl
#         } elseif {[file extension $origin] == ".sv"} {
#             set subdir hdl
#         } elseif {[file extension $origin] != ".bd" && [file extension $origin] != ".xci"} {
#             set subdir other
#         } else {
#             set skip 1
#         }
#         
#         foreach ip [get_ips] {
#             set ip_dir [get_property IP_DIR $ip]
#             set source_length [string length $source_file]
#             set dir_length [string length $ip_dir]
#             if {$source_length >= $dir_length && [string range $source_file 0 $dir_length-1] == $ip_dir} {
#                 set skip 1
#             }
#         }
#         
#         if {$skip == 0} {
#             puts "INFO: Checking in [file tail $origin] to version control."
#             set target $repo_path/src/$subdir/[file tail $origin]
#             if {[file exists $target] == 0} { # TODO: this may not be safe; remind users to make sure to delete any unused files from version control
#                 file copy -force $origin $target
#             }
#         }
#     }
#     foreach ip [get_ips] {
#         set origin [get_property ip_file $ip]
#         set ipname [get_property name $ip]
#         set dir "$repo_path/src/ip/$ipname"
#         if {[file exists $dir] == 0} {
#             file mkdir $dir
#         }
#         set target $dir/[file tail $origin]
#         puts "INFO: Checking in [file tail $origin] to version control."
#         if {[file exists $target] == 0} {
#             # TODO: this may not be safe; remind users to make sure to delete any unused files from version control
#             file copy -force $origin $target
#         }
#     }
#     # TODO: foreach file in /src/ip, if it wasn't just checked in, delete it
# }
INFO: Checking in top.vhd to version control.
INFO: Checking in archive_project_summary.txt to version control.
INFO: Checking in clk_wiz_0.xci to version control.
# foreach constraint_file [get_files -of_objects [get_filesets constrs_1]] {
#     set origin [get_property name $constraint_file]
#     set target $repo_path/src/constraints/[file tail $origin]
#     puts "INFO: Checking in [file tail $origin] to version control."
#         if {[file exists $target] == 0} { # TODO: this may not be safe; remind users to make sure to delete any unused files from version control
#         file copy -force $origin $target
#     }
# }
INFO: Checking in Arty_Master.xdc to version control.
# if {[file exists $repo_path/project_info.tcl] == 0 || $force_overwrite_info_script != 0} {
#     set proj_obj [get_projects [file rootname $proj_file]]
#     set board_part [current_board_part -quiet]
#     set part [get_property part $proj_obj]
#     set default_lib [get_property default_lib $proj_obj]
#     set simulator_language [get_property simulator_language $proj_obj]
#     set target_language [get_property target_language $proj_obj]
#     puts "INFO: Checking in project_info.tcl to version control."
#     set file_name $repo_path/project_info.tcl
#     set file_obj [open $file_name "w"]
#     puts $file_obj "# This is an automatically generated file used by digilent_vivado_checkout.tcl to set project options"
#     puts $file_obj "proc set_project_properties_post_create_project {proj_name} {"
#     puts $file_obj "    set project_obj \[get_projects \$proj_name\]"
#     puts $file_obj "	set_property \"part\" \"$part\" \$project_obj"
#     if {$board_part ne ""} {
#         puts $file_obj "	set_property \"board_part\" \"$board_part\" \$project_obj"
#     }
#     puts $file_obj "	set_property \"default_lib\" \"$default_lib\" \$project_obj"
#     puts $file_obj "	set_property \"simulator_language\" \"$simulator_language\" \$project_obj"
#     puts $file_obj "	set_property \"target_language\" \"$target_language\" \$project_obj"
#     puts $file_obj "}"
#     puts $file_obj ""
#     puts $file_obj "proc set_project_properties_pre_add_repo {proj_name} {"
#     puts $file_obj "    set project_obj \[get_projects \$proj_name\]"
#     puts $file_obj "    # default nothing"
#     puts $file_obj "}"
#     puts $file_obj ""
#     puts $file_obj "proc set_project_properties_post_create_runs {proj_name} {"
#     puts $file_obj "    set project_obj \[get_projects \$proj_name\]"
#     puts $file_obj "    # default nothing"
#     puts $file_obj "}"
#     
#     close $file_obj
# }
INFO: Checking in project_info.tcl to version control.
# set script_dir [file normalize [file dirname [info script]]]
# set master_gitignore [file join $repo_path .gitignore]
# if {[file exists $master_gitignore] == 0} {
#     puts "WARNING: This repository does not contain a master gitignore. creating one now."
#     set target $master_gitignore
#     set origin [file join $script_dir template_master.gitignore]
#     file copy -force $origin $target
# }
# puts "INFO: Project $proj_file has been checked into version control"
INFO: Project Arty-A7-100-Pmod-VGA.xpr has been checked into version control
update_compile_order -fileset sources_1
close_project
source digilent_vivado_checkout.tcl
# set idx [lsearch ${argv} "-r"]
# if {${idx} != -1} {
#     set repo_path [glob -nocomplain [file normalize [lindex ${argv} [expr {${idx}+1}]]]]
# } else {
#     # Default
#     set repo_path [file normalize [file dirname [info script]]/..]
# }
# set idx [lsearch ${argv} "-x"]
# if {${idx} != -1} {
#     set xpr_path [file normalize [lindex ${argv} [expr {${idx}+1}]]]
# } else {
#     # Default
#     set xpr_path [file join ${repo_path} proj [file tail $repo_path]].xpr]
# }
# set idx [lsearch ${argv} "-v"]
# if {${idx} != -1} {
#     set vivado_version [lindex ${argv} [expr {${idx}+1}]]
# } else {
#     # Default
#     set vivado_version [version -short]
# }
# set vivado_year [lindex [split $vivado_version "."] 0]
# set proj_name [file rootname [file tail $xpr_path]]
# puts "INFO: Creating new project \"$proj_name\" in [file dirname $xpr_path]"
INFO: Creating new project "Arty-A7-100-Pmod-VGA" in C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj
# create_project $proj_name [file dirname $xpr_path]
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1704] No user IP repositories specified
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2020.1/data/ip'.
create_project: Time (s): cpu = 00:00:11 ; elapsed = 00:00:06 . Memory (MB): peak = 1079.578 ; gain = 0.000
# source $repo_path/project_info.tcl
## proc set_project_properties_post_create_project {proj_name} {
##     set project_obj [get_projects $proj_name]
## 	set_property "part" "xc7a100tcsg324-1" $project_obj
## 	set_property "board_part" "digilentinc.com:arty-a7-100:part0:1.0" $project_obj
## 	set_property "default_lib" "xil_defaultlib" $project_obj
## 	set_property "simulator_language" "Mixed" $project_obj
## 	set_property "target_language" "VHDL" $project_obj
## }
## proc set_project_properties_pre_add_repo {proj_name} {
##     set project_obj [get_projects $proj_name]
##     # default nothing
## }
## proc set_project_properties_post_create_runs {proj_name} {
##     set project_obj [get_projects $proj_name]
##     # default nothing
## }
# puts "INFO: Capturing board information from $repo_path/project_info.tcl"
INFO: Capturing board information from C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/project_info.tcl
# set_project_properties_post_create_project $proj_name
# set obj [get_projects $proj_name]
# set part_name [get_property "part" $obj]
# puts "INFO: Configuring project IP handling properties"
INFO: Configuring project IP handling properties
# set_property "corecontainer.enable" "0" $obj
# set_property "ip_cache_permissions" "read write" $obj
# set_property "ip_output_repo" "[file normalize "$repo_path/proj/cache"]" $obj
WARNING: [IP_Flow 19-4995] The host OS only allows 260 characters in a normal path. The IP cache path is more than 80 characters. If you experience issues with IP caching, please consider changing the IP cache to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. 
Current IP cache path is C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/cache 
# if {[string equal [get_filesets -quiet sources_1] ""]} {
#     puts "INFO: Creating sources_1 fileset"
#     create_fileset -srcset sources_1
# }
# if {[string equal [get_filesets -quiet constrs_1] ""]} {
#     puts "INFO: Creating constrs_1 fileset"
#     create_fileset -constrset constrs_1
# }
# puts "INFO: capturing IP-related settings from $repo_path/project_info.tcl"
INFO: capturing IP-related settings from C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/project_info.tcl
# set_project_properties_pre_add_repo $proj_name
# puts "INFO: Setting IP repository paths"
INFO: Setting IP repository paths
# set obj [get_filesets sources_1]
# set_property "ip_repo_paths" "[file normalize $repo_path/repo]" $obj
# puts "INFO: Refreshing IP repositories"
INFO: Refreshing IP repositories
# update_ip_catalog -rebuild
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/repo'.
# puts "INFO: Adding HDL sources"
INFO: Adding HDL sources
# add_files -quiet -norecurse $repo_path/src/hdl
# puts "INFO: Adding XCI IP sources"
INFO: Adding XCI IP sources
# add_files -quiet [glob -nocomplain $repo_path/src/ip/*/*.xci]
# puts "INFO: Adding constraints"
INFO: Adding constraints
# add_files -quiet -norecurse -fileset constrs_1 $repo_path/src/constraints
# set ipi_tcl_files [glob -nocomplain "$repo_path/src/bd/*.tcl"]
# set ipi_bd_files [glob -nocomplain "$repo_path/src/bd/*/*.bd"]
# if {[llength $ipi_tcl_files] > 1} {
#     # TODO: quit and log the error
#     puts "ERROR: This script cannot handle projects containing more than one block design! More than one tcl script foudn in src/bd"
# } elseif {[llength $ipi_tcl_files] == 1} {
#     # Use TCL script to rebuild block design
#     puts "INFO: Rebuilding block design from script"
#     # Create local source directory for bd
#     if {[file exist "[file rootname $xpr_path].srcs"] == 0} {
#         file mkdir "[file rootname $xpr_path].srcs"
#     }
#     if {[file exist "[file rootname $xpr_path].srcs/sources_1"] == 0} {
#         file mkdir "[file rootname $xpr_path].srcs/sources_1"
#     }
#     if {[file exist "[file rootname $xpr_path].srcs/sources_1/bd"] == 0} {
#         file mkdir "[file rootname $xpr_path].srcs/sources_1/bd"
#     }
#     # Force Non-Remote BD Flow
#     set origin_dir [pwd]
#     cd "[file rootname $xpr_path].srcs/sources_1"
#     set run_remote_bd_flow 0
#     source [lindex $ipi_tcl_files 0]
#     cd $origin_dir
# } elseif {[llength $ipi_bd_files] > 1} {
#     # TODO: quit and log the error
#     puts "ERROR: This script cannot handle projects containing more than one block design! More than one bd file foudn in src/bd"
# } elseif {[llength $ipi_bd_files] == 1} {
#     # Add block design from .bd file and sources
#     puts "INFO: Rebuilding block design from BD fileset"
#     add_files -norecurse -quiet -fileset sources_1 [glob -nocomplain $repo_path/src/bd/*/*.bd]
#     open_bd_design [glob -nocomplain $repo_path/src/bd/*/*.bd]
#     set design_name [get_bd_designs]
#     set file "$repo_path/src/bd/$design_name/$design_name.bd"
#     set file [file normalize $file]
#     set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
#     if { ![get_property "is_locked" $file_obj] } {
#         set_property "synth_checkpoint_mode" "Hierarchical" $file_obj
#     }
# }
# foreach ip [get_ips -filter "IS_LOCKED==1"] {
#     upgrade_ip -vlnv [get_property UPGRADE_VERSIONS $ip] $ip
#     export_ip_user_files -of_objects $ip -no_script -sync -force -quiet
# }
Upgrading 'clk_wiz_0'
INFO: [IP_Flow 19-3422] Upgraded clk_wiz_0 (Clocking Wizard 6.0) from revision 1 to revision 5
INFO: [IP_Flow 19-1686] Generating 'Instantiation Template' target for IP 'clk_wiz_0'...
# catch {
# 	# catch block prevents projects without a block design from erroring at this step
# 	set bd_name [get_bd_designs -of_objects [get_bd_cells /]]
# 	set bd_file [get_files $bd_name.bd]
# 	set wrapper_file [make_wrapper -files $bd_file -top -force]
# 	import_files -quiet -force -norecurse $wrapper_file
# 
# 	set obj [get_filesets sources_1]
# 	set_property "top" "${bd_name}_wrapper" $obj
# }
ERROR: [BD 5-104] A block design must be open to run this command. Please create/open a block design.
# if {[string equal [get_runs -quiet synth_1] ""]} {
#     puts "INFO: Creating synth_1 run"
#     create_run -name synth_1 -part $part_name -flow {Vivado Synthesis $vivado_year} -strategy "Vivado Synthesis Defaults" -constrset constrs_1
# } else {
#     set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
#     set_property flow "Vivado Synthesis $vivado_year" [get_runs synth_1]
# }
# puts "INFO: Configuring synth_1 run"
INFO: Configuring synth_1 run
# set obj [get_runs synth_1]
# set_property "part" $part_name $obj
# set_property "steps.synth_design.args.flatten_hierarchy" "none" $obj
# set_property "steps.synth_design.args.directive" "RuntimeOptimized" $obj
# set_property "steps.synth_design.args.fsm_extraction" "off" $obj
# puts "INFO: Setting current synthesis run"
INFO: Setting current synthesis run
# current_run -synthesis [get_runs synth_1]
# if {[string equal [get_runs -quiet impl_1] ""]} {
#     puts "INFO: Creating impl_1 run"
#     create_run -name impl_1 -part $part_name -flow {Vivado Implementation $vivado_year} -strategy "Vivado Implementation Defaults" -constrset constrs_1 -parent_run synth_1
# } else {
#     set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
#     set_property flow "Vivado Implementation $vivado_year" [get_runs impl_1]
# }
# puts "INFO: Configuring impl_1 run"
INFO: Configuring impl_1 run
# set obj [get_runs impl_1]
# set_property "part" $part_name $obj
# set_property "steps.opt_design.args.directive" "RuntimeOptimized" $obj
# set_property "steps.place_design.args.directive" "RuntimeOptimized" $obj
# set_property "steps.route_design.args.directive" "RuntimeOptimized" $obj
# puts "INFO: Setting current implementation run"
INFO: Setting current implementation run
# current_run -implementation [get_runs impl_1]
# puts "INFO: capturing run settings from $repo_path/project_info.tcl"
INFO: capturing run settings from C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/project_info.tcl
# set_project_properties_post_create_runs $proj_name
# puts "INFO: Project created: [file tail $proj_name]"
INFO: Project created: Arty-A7-100-Pmod-VGA
# puts "INFO: Exiting Vivado"
INFO: Exiting Vivado
update_compile_order -fileset sources_1
launch_runs impl_1 -to_step write_bitstream -jobs 4
INFO: [IP_Flow 19-1686] Generating 'Synthesis' target for IP 'clk_wiz_0'...
INFO: [IP_Flow 19-1686] Generating 'Implementation' target for IP 'clk_wiz_0'...
[Thu Jul 16 12:40:02 2020] Launched clk_wiz_0_synth_1, synth_1...
Run output will be captured here:
clk_wiz_0_synth_1: C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/Arty-A7-100-Pmod-VGA.runs/clk_wiz_0_synth_1/runme.log
synth_1: C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/Arty-A7-100-Pmod-VGA.runs/synth_1/runme.log
[Thu Jul 16 12:40:02 2020] Launched impl_1...
Run output will be captured here: C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/Arty-A7-100-Pmod-VGA.runs/impl_1/runme.log
open_hw_manager
connect_hw_server -allow_non_jtag
INFO: [Labtools 27-2285] Connecting to hw_server url TCP:localhost:3121
INFO: [Labtools 27-2222] Launching hw_server...
INFO: [Labtools 27-2221] Launch Output:

****** Xilinx hw_server v2020.1
  **** Build date : May 27 2020 at 20:24:38
    ** Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.


INFO: [Labtools 27-3415] Connecting to cs_server url TCP:localhost:3042
INFO: [Labtools 27-3417] Launching cs_server...
INFO: [Labtools 27-2221] Launch Output:


****** Xilinx cs_server v2020.1.0
  **** Build date : May 14 2020-04:10:29
    ** Copyright 2017-2020 Xilinx, Inc. All Rights Reserved.



connect_hw_server: Time (s): cpu = 00:00:01 ; elapsed = 00:00:07 . Memory (MB): peak = 1269.383 ; gain = 13.930
open_hw_target
INFO: [Labtoolstcl 44-466] Opening hw_target localhost:3121/xilinx_tcf/Digilent/210319A75389A
open_hw_target: Time (s): cpu = 00:00:06 ; elapsed = 00:00:06 . Memory (MB): peak = 2575.313 ; gain = 1305.930
set_property PROGRAM.FILE {C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/Arty-A7-100-Pmod-VGA.runs/impl_1/top.bit} [get_hw_devices xc7a100t_0]
current_hw_device [get_hw_devices xc7a100t_0]
refresh_hw_device -update_hw_probes false [lindex [get_hw_devices xc7a100t_0] 0]
INFO: [Labtools 27-1434] Device xc7a100t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it.
set_property PROBES.FILE {} [get_hw_devices xc7a100t_0]
set_property FULL_PROBES.FILE {} [get_hw_devices xc7a100t_0]
set_property PROGRAM.FILE {C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/Arty-A7-100-Pmod-VGA.runs/impl_1/top.bit} [get_hw_devices xc7a100t_0]
program_hw_devices [get_hw_devices xc7a100t_0]
INFO: [Labtools 27-3164] End of startup status: HIGH
refresh_hw_device [lindex [get_hw_devices xc7a100t_0] 0]
INFO: [Labtools 27-1434] Device xc7a100t (JTAG device index = 0) is programmed with a design that has no supported debug core(s) in it.
archive_project C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/Arty-A7-100-Pmod-VGA-2020-1.xpr.zip -temp_dir C:/Users/eibraim/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-20668-ROCLULT-1L1Y2Y0 -force -include_local_ip_cache -include_config_settings
INFO: [Coretcl 2-137] starting archive...
INFO: [Coretcl 2-1499] Saving project copy to temporary location 'C:/Users/eibraim/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-20668-ROCLULT-1L1Y2Y0' for archiving project
Scanning sources...
Finished scanning sources
WARNING: [filemgmt 56-3] Default IP Output Path : Could not find the directory 'C:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/proj/Arty-A7-100-Pmod-VGA.srcs/sources_1'.
INFO: [IP_Flow 19-234] Refreshing IP repositories
INFO: [IP_Flow 19-1700] Loaded user IP repository 'c:/Users/eibraim/Desktop/RepoUpdates/Arty-A7-100/VGA/Arty-A7-100-Pmod-VGA/repo'.
INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2020.1/data/ip'.
INFO: [Coretcl 2-1211] Creating project copy for archival...
INFO: [ProjectBase 1-495] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience any problem with archiving the project, please consider setting environment variable $TEMP to a shorter path.
Current project path is 'C:/Users/eibraim/AppData/Roaming/Xilinx/Vivado/.Xil/Vivado-20668-ROCLULT-1L1Y2Y0/PrjAr/_X_'.
INFO: [Coretcl 2-1213] Including run results for 'synth_1'
INFO: [Coretcl 2-1213] Including run results for 'clk_wiz_0_synth_1'
INFO: [Coretcl 2-1213] Including run results for 'impl_1'
INFO: [Coretcl 2-133] re-setting run 'clk_wiz_0_impl_1'...
INFO: [Coretcl 2-1212] Importing remotely added design sources and verilog include files (if any)...
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'clk_wiz_0'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'constrs_1'
INFO: [filemgmt 20-348] Importing the appropriate files for fileset: 'sources_1'
